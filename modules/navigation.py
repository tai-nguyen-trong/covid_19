# modules/navigation.py
import math
from tkinter import messagebox
<<<<<<< HEAD
=======
import pandas as pd
from modules import updateTable

# ƒêi·ªÅu h∆∞·ªõng ph√¢n trang
df_current = None  # üî• ƒê·∫£m b·∫£o bi·∫øn to√†n c·ª•c ch·ª©a d·ªØ li·ªáu hi·ªán t·∫°i
current_page = 1  # üî• ƒê·∫∑t gi√° tr·ªã trang m·∫∑c ƒë·ªãnh
items_per_page = 30

def paginate_data(df, page_number, items_per_page):
    """Ph√¢n trang d·ªØ li·ªáu."""
    if df is None or df.empty:
        return pd.DataFrame() # Tr·∫£ v·ªÅ DataFrame r·ªóng n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu

    start_index = (page_number - 1) * items_per_page
    end_index = start_index + items_per_page
    return df.iloc[start_index:end_index]
>>>>>>> 9ac5d4e8940c67b7986b8385ebf392ed304f0a4a

def get_total_pages(df, items_per_page):
    """T√≠nh t·ªïng s·ªë trang d·ª±a tr√™n k√≠ch th∆∞·ªõc DataFrame v√† s·ªë item m·ªói trang"""
    if df is None or df.empty:
        return 1
    return math.ceil(len(df) / items_per_page)

<<<<<<< HEAD
def handle_page_navigation(df_current, current_page, items_per_page, action_type):
    """X·ª≠ l√Ω ƒëi·ªÅu h∆∞·ªõng trang v√† tr·∫£ v·ªÅ trang m·ªõi"""
=======
def handle_page_navigation(df_current, current_page_num, items_per_pg, action_type):
    """X·ª≠ l√Ω ƒëi·ªÅu h∆∞·ªõng trang v·ªõi d·ªØ li·ªáu hi·ªán t·∫°i."""
>>>>>>> 9ac5d4e8940c67b7986b8385ebf392ed304f0a4a
    if df_current is None or df_current.empty:
        return current_page
    
    total_pages = get_total_pages(df_current, items_per_page)
    
    if action_type == "first":
        return 1
    elif action_type == "prev":
        return max(1, current_page - 1)
    elif action_type == "next":
        return min(total_pages, current_page + 1)
    elif action_type == "last":
        return total_pages
    
    return current_page

<<<<<<< HEAD
def paginate_data(df, current_page, items_per_page):
    """Ph√¢n trang d·ªØ li·ªáu v√† tr·∫£ v·ªÅ DataFrame cho trang hi·ªán t·∫°i"""
    if df is None or df.empty:
        return df
    
    start_idx = (current_page - 1) * items_per_page
    end_idx = start_idx + items_per_page
    return df.iloc[start_idx:end_idx]

def navigate_page(action_type, tree, page_label, items_per_page, update_table_display, get_total_pages, handle_page_navigation):
    """H√†m ƒëi·ªÅu h∆∞·ªõng trang (legacy function - c√≥ th·ªÉ b·ªè n·∫øu kh√¥ng d√πng)"""
    # H√†m n√†y c√≥ th·ªÉ ƒë∆∞·ª£c thay th·∫ø b·∫±ng handle_page_navigation ·ªü tr√™n
    pass
=======
    print(f"Trang m·ªõi sau ƒëi·ªÅu h∆∞·ªõng: {current_page_num}")  # üî• Ki·ªÉm tra k·∫øt qu·∫£ cu·ªëi c√πng
    return current_page_num  # Tr·∫£ v·ªÅ s·ªë trang m·ªõi
>>>>>>> 9ac5d4e8940c67b7986b8385ebf392ed304f0a4a
