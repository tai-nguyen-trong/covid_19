# c·∫≠p nh·∫≠t b·∫£ng d·ªØ li·ªáu (Treeview) tr√™n giao di·ªán b·∫±ng c√°ch x√≥a d·ªØ li·ªáu c≈© v√† hi·ªÉn th·ªã d·ªØ li·ªáu theo trang hi·ªán t·∫°i.
# from modules.navigation import get_total_pages


def update_table_display(target_table, target_page_label, df_to_display, current_page_num, items_per_pg):
    from modules.navigation import get_total_pages  # üî• Import t·∫°i ch·ªó tr√°nh v√≤ng l·∫∑p

    """
    H√†m c·∫≠p nh·∫≠t m·ªôt b·∫£ng d·ªØ li·ªáu (Treeview) tr√™n giao di·ªán.
    Nh·∫≠n target_table (Treeview), target_page_label (Label), DataFrame c·∫ßn hi·ªÉn th·ªã,
    s·ªë trang hi·ªán t·∫°i v√† s·ªë m·ª•c tr√™n trang l√†m ƒë·ªëi s·ªë.
    """
    if df_to_display is None or df_to_display.empty:
        for row in target_table.get_children():
            target_table.delete(row)
        target_page_label.config(text="Trang -/-")
        return
    
    total_pages = get_total_pages(df_to_display, items_per_pg)

    # Ph√¢n trang d·ªØ li·ªáu
    start_idx = (current_page_num - 1) * items_per_pg
    end_idx = start_idx + items_per_pg
    page_data = df_to_display.iloc[start_idx:end_idx]

    # X√≥a d·ªØ li·ªáu c≈© trong b·∫£ng
    for row in target_table.get_children():
        target_table.delete(row)

    # C·∫≠p nh·∫≠t d·ªØ li·ªáu v√†o b·∫£ng
    for _, row in page_data.iterrows():

        target_table.insert("", "end", values=list(row))

    target_page_label.config(text=f"Trang {current_page_num}/{total_pages}")